#!/bin/bash
##################################
#Include file lib in same dir as this file
. $(dirname $0)"/lib"

function usage
{
   msginfo "\nUsage: odooenv [OPTIONS] [CLIENT]"
   msginfo "Manages odoo environment in this VPS"
   msginfo
   msginfo "-i  install no-ip on this server"
   msginfo "-l  list all clients in this server"
   msginfo "-u [client|all] start CLIENT or all clients"
   msginfo "-d  stop CLIENT or all clients if none given"
   msginfo "-h  this help"
   msginfo "-p  pull all images"
   msginfo "-D  start CLIENT in developer mode, CLIENT must be given"
   msginfo "-c  start console mode for CLIENT, must be given"
}

############################################################################################
function install_noip
{
  msgrun "\n installing no-ip on this server"
  apt-get install make
  apt-get -y install gcc
  cd /usr/local/src/
  wget http://www.noip.com/client/linux/noip-duc-linux.tar.gz
  tar xf noip-duc-linux.tar.gz
  cd noip-2.1.9-1/
  make install
  msginfo "Pleas answer some questions"
#Please enter login/email: jobiols
#Please enter password: veconceR
#contestar preguntas sobre defaults y grupos.
  rm /usr/local/src/noip-duc-linux.tar.gz
#Poner el script en init.d
  cp /usr/local/src/noip-2.1.9-1/debian.noip2.sh  /etc/init.d/
#Make script executable
  chmod +x /etc/init.d/debian.noip2.sh
#hacer que se ejecute al booteo
  update-rc.d debian.noip2.sh defaults
#arrancar y parar el demonio
  msgrun "Starting no-ip daemon"
  /etc/init.d/debian.noip2.sh restart
  msgdone "no-ip service running"
}

############################################################################################
function list_all
{
  for ((i=0 ; i<${#port[@]} ; i++))
  do
    msginfo " ${port[i]} ${client[i]} "
  done

}


function start_aeroo
{
  msgrun "starting aeroo container"

}

function start_postgres
{
  msgrun "starting postgres container"

}


function do_up
#starts db and aeroo if needed and the client given or all clients.
{
	msgrun "starting $OPTARG client(s)"
	start_aeroo
	start_postgres
	if ($OPTARG = 'all'); then
 	  for ((i=0 ; i<${#port[@]} ; i++))
	  do
	    msginfo " ${port[i]} ${client[i]} "
	  done
	fi
}

function do_down
{
	msgrun "down $OPTARG"
}

function do_pull
{
	msgrun "pulling all images"
	if ! git pull; then
		msgerr "fail pulling from repo"
	exit 1 
	fi
}

function developer_mode
{
	msgrun "developer mode for $OPTARG"
}

function console_mode
{
	msgrun "console mode for $OPTARG"
}

if [[ $EUID -ne 0 ]]; then
   msgerror "This script must be run as root"

   exit 1
fi

while getopts "u:d:hpD:c:l" opt; do
  case $opt in
    i)
	install_noip
	;;
    l)
	list_all
	exit 0
	;;
    u)
 	do_up
      	;;
    d)
      do_down
      ;;
    h)
      usage
      exit 1
      ;;
    p)
      do_pull
      ;;
    D)
      developer_mode
      ;;
    c)
      console_mode
      ;;
  esac
done


